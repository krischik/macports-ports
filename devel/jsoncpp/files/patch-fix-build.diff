diff --git a/include/json/reader.h b/include/json/reader.h
index 947fc00..1a7368e 100644
--- a/include/json/reader.h
+++ b/include/json/reader.h
@@ -36,7 +36,8 @@
  *
  * \deprecated Use CharReader and CharReaderBuilder.
  */
-class [[deprecated("deprecated Use CharReader and CharReaderBuilder.")]] JSON_API Reader {
+class JSON_API [[deprecated("deprecated Use CharReader and CharReaderBuilder.")]]
+  Reader {
 public:
   typedef char Char;
   typedef const Char* Location;
diff --git a/include/json/writer.h b/include/json/writer.h
index 3280141..4dd0f9a 100644
--- a/include/json/writer.h
+++ b/include/json/writer.h
@@ -145,7 +145,8 @@
 /** \brief Abstract class for writers.
  * \deprecated Use StreamWriter. (And really, this is an implementation detail.)
  */
-class [[deprecated("Use StreamWriter instead")]] JSON_API Writer {
+class JSON_API [[deprecated("Use StreamWriter instead")]]
+  Writer {
 public:
   virtual ~Writer();
 
@@ -165,8 +166,8 @@
 #pragma warning(push)
 #pragma warning(disable : 4996) // Deriving from deprecated class
 #endif
-class [[deprecated("Use StreamWriterBuilder instead")]] JSON_API FastWriter
-    : public Writer {
+class JSON_API [[deprecated("Use StreamWriterBuilder instead")]]
+  FastWriter : public Writer {
 public:
   FastWriter();
   ~FastWriter() override = default;
@@ -225,7 +226,7 @@
 #pragma warning(push)
 #pragma warning(disable : 4996) // Deriving from deprecated class
 #endif
-class [[deprecated("Use StreamWriterBuilder instead")]] JSON_API
+class JSON_API [[deprecated("Use StreamWriterBuilder instead")]]
     StyledWriter : public Writer {
 public:
   StyledWriter();
@@ -294,7 +295,7 @@
 #pragma warning(push)
 #pragma warning(disable : 4996) // Deriving from deprecated class
 #endif
-class [[deprecated("Use StreamWriterBuilder instead")]] JSON_API
+class JSON_API [[deprecated("Use StreamWriterBuilder instead")]]
     StyledStreamWriter {
 public:
   /**
diff --git a/src/jsontestrunner/main.cpp b/src/jsontestrunner/main.cpp
index d2d41aa..2155d29 100644
--- a/src/jsontestrunner/main.cpp
+++ b/src/jsontestrunner/main.cpp
@@ -56,9 +56,11 @@
     return "";
   fseek(file, 0, SEEK_END);
   long const size = ftell(file);
+  if (size == -1)
+    return "";
   size_t const usize = static_cast<unsigned long>(size);
   fseek(file, 0, SEEK_SET);
-  char* buffer = new char[size + 1];
+  char* buffer = new char[usize + 1];
   buffer[size] = 0;
   Json::String text;
   if (fread(buffer, 1, usize, file) == usize)
