# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=portfile:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0

github.setup        rust-lang cargo 0.25.0
#revision            0
categories          devel
platforms           darwin
supported_archs     i386 x86_64
license             {MIT Apache-2}
maintainers         nomaintainer

description         The Rust package manager

long_description    Cargo downloads your Rust projectâ€™s dependencies and \
                    compiles your project.

homepage            https://crates.io

# can use cmake or cmake-devel; default to cmake.
depends_build       path:bin/cmake:cmake \
                    bin:python:python27

depends_lib         path:lib/libssl.dylib:openssl \
                    port:curl \
                    port:rust

installs_libs       no

universal_variant   no

# Use an older version of cargo to build itself
set stage0(version)  0.24.0
set stage0(platform) ${build_arch}-apple-darwin

if {${build_arch} eq "i386"} {
    set stage0(platform) i686-apple-darwin
}

set stage0(distname) ${name}-${stage0(version)}-${stage0(platform)}
set stage0(distfile) ${stage0(distname)}${extract.suffix}

master_sites-append https://static.rust-lang.org/dist/:stage0
distfiles-append    ${stage0(distfile)}:stage0

checksums           ${distname}${extract.suffix} \
                    rmd160  269eba2a358c3f690cbe5ca88776608cce26f54b \
                    sha256  00241ec54c1c48e0ae93963174f6240f26fddbdec0b0b51478c2ee500551f3aa \
                    size    973758

if {${build_arch} eq "i386"} {
    checksums-append \
                    ${stage0(distfile)} \
                    rmd160  17458dce93eb7e644385bd82ecb511311765e5e6 \
                    sha256  6b7a0a97e0d87cca7b7a5e090d168be6cdbb03298381bece33df493447e17e76 \
                    size    3909191
} else {
    checksums-append \
                    ${stage0(distfile)} \
                    rmd160  ac5eff8ae2489845f9761c275b03677a50309c1a \
                    sha256  b6f7c662ea75a94f5a5e41c2fee95f09a5ba168429ac8cdd41f6ba2c78d1b07f \
                    size    4215369
}

# github.setup sets this to yes, breaking the stage0 fetch
fetch.ignore_sslcert no

# set DYLD_FALLBACK_LIBRARY_PATH instead of DYLD_LIBRARY_PATH
# without this change, --target fails
# see https://users.rust-lang.org/t/subprocess-and-dynamic-library-linking-problem-interaction/7873
# see https://github.com/rust-lang/cargo/issues/2888
patchfiles-append   path-dyld.diff

use_configure       no

build.cmd           ${workpath}/${stage0(distname)}/${name}/bin/cargo
build.target        build
build.args          --release -j${build.jobs}
build.env           OPENSSL_DIR=${prefix}

# see https://trac.macports.org/wiki/UsingTheRightCompiler
build.env-append    CC=${configure.cc} \
                    CXX=${configure.cxx}

destroot {
    xinstall ${worksrcpath}/target/release/cargo ${destroot}${prefix}/bin

    xinstall {*}[glob ${worksrcpath}/src/etc/man/*] \
        ${destroot}${prefix}/share/man/man1

    xinstall -d ${destroot}${prefix}/share/doc/${name}
    xinstall -W ${worksrcpath} \
        LICENSE-APACHE LICENSE-MIT LICENSE-THIRD-PARTY README.md \
        ${destroot}${prefix}/share/doc/${name}

    xinstall -d ${destroot}${prefix}/etc/bash_completion.d
    xinstall ${worksrcpath}/src/etc/cargo.bashcomp.sh \
        ${destroot}${prefix}/etc/bash_completion.d/${name}

    xinstall -d ${destroot}${prefix}/share/zsh/site-functions
    xinstall ${worksrcpath}/src/etc/_cargo \
        ${destroot}${prefix}/share/zsh/site-functions
}
