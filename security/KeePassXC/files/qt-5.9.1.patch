Fix build on macOS with Qt 5.9.1
https://github.com/keepassxreboot/keepassxc/commit/b95eaa5843df41964e93c6734bda3c6f215e306e
--- src/crypto/SymmetricCipher.h.orig
+++ src/crypto/SymmetricCipher.h
@@ -59,11 +59,11 @@ class SymmetricCipher
         return m_backend->process(data, ok);
     }
 
-    inline bool processInPlace(QByteArray& data) Q_REQUIRED_RESULT {
+    Q_REQUIRED_RESULT inline bool processInPlace(QByteArray& data) {
         return m_backend->processInPlace(data);
     }
 
-    inline bool processInPlace(QByteArray& data, quint64 rounds) Q_REQUIRED_RESULT {
+    Q_REQUIRED_RESULT inline bool processInPlace(QByteArray& data, quint64 rounds) {
         Q_ASSERT(rounds > 0);
         return m_backend->processInPlace(data, rounds);
     }
--- src/crypto/SymmetricCipherBackend.h.orig
+++ src/crypto/SymmetricCipherBackend.h
@@ -29,8 +29,8 @@ class SymmetricCipherBackend
     virtual bool setIv(const QByteArray& iv) = 0;
 
     virtual QByteArray process(const QByteArray& data, bool* ok) = 0;
-    virtual bool processInPlace(QByteArray& data) Q_REQUIRED_RESULT = 0;
-    virtual bool processInPlace(QByteArray& data, quint64 rounds) Q_REQUIRED_RESULT = 0;
+    Q_REQUIRED_RESULT virtual bool processInPlace(QByteArray& data) = 0;
+    Q_REQUIRED_RESULT virtual bool processInPlace(QByteArray& data, quint64 rounds) = 0;
 
     virtual bool reset() = 0;
     virtual int blockSize() const = 0;
--- src/crypto/SymmetricCipherGcrypt.h.orig
+++ src/crypto/SymmetricCipherGcrypt.h
@@ -35,8 +35,8 @@ class SymmetricCipherGcrypt : public SymmetricCipherBackend
     bool setIv(const QByteArray& iv);
 
     QByteArray process(const QByteArray& data, bool* ok);
-    bool processInPlace(QByteArray& data) Q_REQUIRED_RESULT;
-    bool processInPlace(QByteArray& data, quint64 rounds) Q_REQUIRED_RESULT;
+    Q_REQUIRED_RESULT bool processInPlace(QByteArray& data);
+    Q_REQUIRED_RESULT bool processInPlace(QByteArray& data, quint64 rounds);
 
     bool reset();
     int blockSize() const;
--- src/format/KeePass2RandomStream.h.orig
+++ src/format/KeePass2RandomStream.h
@@ -29,7 +29,7 @@ class KeePass2RandomStream
     bool init(const QByteArray& key);
     QByteArray randomBytes(int size, bool* ok);
     QByteArray process(const QByteArray& data, bool* ok);
-    bool processInPlace(QByteArray& data) Q_REQUIRED_RESULT;
+    Q_REQUIRED_RESULT bool processInPlace(QByteArray& data);
     QString errorString() const;
 
 private:
